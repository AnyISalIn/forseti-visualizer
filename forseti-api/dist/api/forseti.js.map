{"version":3,"sources":["../../server/api/forseti.js"],"names":["config","db","forsetiApi","all","get","req","res","ForsetiService","getResourcesJson","error","results","console","log","json","params","parentId","getResources","iamPrefix","getExplainIdentity","i","accesses","length","j","resources","role","getExplainRoles","inventoryIndexId","getViolations"],"mappings":"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","sourcesContent":["// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n    Router\n} from 'express';\nimport ForsetiService from '../services/forseti-service';\nimport cors from 'cors';\n\nexport default ({\n    config,\n    db\n}) => {\n    let forsetiApi = Router();\n\n    forsetiApi.all('*', cors());\n\n    /**\n     * @desc returns .json file content\n     */\n    forsetiApi.get('/', function (req, res) {\n        ForsetiService.getResourcesJson(function (error, results) {\n            if (error) {\n                console.log(error);\n                // throw error;\n            }\n            let json = results;\n            res.json(json);\n        });\n    });\n\n    /**\n     * @desc returns resources\n     */\n    forsetiApi.get('/resources/:parentId?', function (req, res) {\n        console.log(req.params.parentId);\n\n        let parentId = req.params.parentId ? req.params.parentId : null;\n\n        ForsetiService.getResources(parentId, function (error, results) {\n            if (error) {\n                console.log(error);\n                // throw error;\n            }\n            let json = results;\n            res.json(json);\n        });\n    });\n\n    /**\n     * @desc returns grpc call for iam explain\n     */\n    forsetiApi.get('/getExplainIdentity/:iamPrefix', function (req, res) {\n        let iamPrefix = req.params.iamPrefix;\n\n        ForsetiService.getExplainIdentity(iamPrefix, function (error, results) {\n            if (error) {\n                console.log('Error: ', error);\n            } else {\n                for (let i = 0; i < results.accesses.length; i++) {\n                    for (let j = 0; j < results.accesses[i].resources.length; j++) {\n                        console.log(results.accesses[i]);\n                        console.log(results.accesses[i].resources[j]);\n                    }\n                }\n\n                res.json(results.accesses);\n            }\n        });\n    });\n\n    /**\n     * @desc returns grpc call for iam explain role\n     */\n    forsetiApi.get('/getExplainRole/:role', function (req, res) {\n        let role = req.params.role;\n\n        console.log('rolex', role);\n\n        ForsetiService.getExplainRoles(role, function (error, results) {\n            if (error)\n                console.log('Error: ', error);\n            else {\n                console.log(results);\n\n                // TODO:\n\n                res.json(results.accesses);\n            }\n        });\n    });\n\n    /**\n     * @desc returns violations\n     */\n    forsetiApi.get('/violations/:inventoryIndexId', function (req, res) {\n        let inventoryIndexId = req.params.inventoryIndexId;\n\n        ForsetiService.getViolations(inventoryIndexId, function (error, results) {\n            if (error) {\n                console.log(error);\n                // throw error;\n            }\n            console.log('getViolations() results:', results)\n\n            let json = results;\n            res.json(json);\n        });\n    });\n\n    return forsetiApi;\n}"],"file":"forseti.js"}