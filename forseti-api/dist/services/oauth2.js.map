{"version":3,"sources":["../../server/services/oauth2.js"],"names":["express","require","passport","GoogleStrategy","Strategy","extractProfile","profile","console","log","imageUrl","photos","length","value","id","displayName","image","use","clientID","config","oauth2ClientId","clientSecret","oauth2ClientSecret","callbackURL","oauth2Callback","accessType","accessToken","refreshToken","cb","serializeUser","user","deserializeUser","obj","router","Router","authRequired","req","res","next","session","oauth2return","originalUrl","redirect","addTemplateVariables","locals","login","encodeURIComponent","logout","get","query","authenticate","scope","err","info","json","module","exports","required","template"],"mappings":"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","sourcesContent":["// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Copyright 2017, Google, Inc.\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n'use strict';\n\nconst express = require('express');\nimport config from '../config.json';\n\n// [START setup]\nconst passport = require('passport');\nconst GoogleStrategy = require('passport-google-oauth20').Strategy;\n\nfunction extractProfile(profile) {\n    console.log('oauth2.js: extractProfile');\n\n    let imageUrl = '';\n    if (profile.photos && profile.photos.length) {\n        imageUrl = profile.photos[0].value;\n    }\n\n    return {\n        id: profile.id,\n        displayName: profile.displayName,\n        image: imageUrl\n    };\n}\n\n// Configure the Google strategy for use by Passport.js.\n//\n// OAuth 2-based strategies require a `verify` function which receives the\n// credential (`accessToken`) for accessing the Google API on the user's behalf,\n// along with the user's profile. The function must invoke `cb` with a user\n// object, which will be set at `req.user` in route handlers after\n// authentication.\npassport.use(new GoogleStrategy({\n    clientID: config.oauth2ClientId,\n    clientSecret: config.oauth2ClientSecret,\n    callbackURL: config.oauth2Callback,\n    accessType: 'offline'\n}, (accessToken, refreshToken, profile, cb) => {\n    // Extract the minimal profile information we need from the profile object\n    // provided by Google\n    console.log('oauth2.js: passport.use', accessToken, refreshToken, profile);\n    \n    cb(null, extractProfile(profile));\n}));\n\npassport.serializeUser((user, cb) => {\n    console.log('oauth2.js: serializeUser', user);\n    cb(null, user);\n});\npassport.deserializeUser((obj, cb) => {\n    console.log('oauth2.js: deserializeUser', obj);\n    cb(null, obj);\n});\n// [END setup]\n\nconst router = express.Router();\n\n// [START middleware]\n// Middleware that requires the user to be logged in. If the user is not logged\n// in, it will redirect the user to authorize the application and then return\n// them to the original URL they requested.\nfunction authRequired(req, res, next) {\n    if (!req.user) {\n        req.session.oauth2return = req.originalUrl;\n        return res.redirect('/auth/login');\n    }\n    next();\n}\n\n// Middleware that exposes the user's profile as well as login/logout URLs to\n// any templates. These are available as `profile`, `login`, and `logout`.\nfunction addTemplateVariables(req, res, next) {\n    res.locals.profile = req.user;\n    res.locals.login = `/auth/login?return=${encodeURIComponent(req.originalUrl)}`;\n    res.locals.logout = `/auth/logout?return=${encodeURIComponent(req.originalUrl)}`;\n    next();\n}\n// [END middleware]\n\n// Begins the authorization flow. The user will be redirected to Google where\n// they can authorize the application to have access to their basic profile\n// information. Upon approval the user is redirected to `/auth/google/callback`.\n// If the `return` query parameter is specified when sending a user to this URL\n// then they will be redirected to that URL when the flow is finished.\n// [START authorize]\nrouter.get(\n    // Login url\n    '/auth/login',\n\n    // Save the url of the user's current page so the app can redirect back to\n    // it after authorization\n    (req, res, next) => {\n        console.log('oauth2.js: /auth/login');\n\n        if (req.query.return) {\n            req.session.oauth2return = req.query.return;\n        }\n        next();\n    },\n\n    // Start OAuth 2 flow using Passport.js\n    passport.authenticate('google', {\n        scope: ['email', 'profile']\n    }, (err, user, info) => {\n        console.log('an error has occurred with authentication');\n    })\n);\n// [END authorize]\n\n// [START callback]\nrouter.get(\n    // OAuth 2 callback url. Use this url to configure your OAuth client in the\n    // Google Developers console\n    '/auth/google/callback',\n\n    // Finish OAuth 2 flow using Passport.js\n    passport.authenticate('google'),\n\n    // Redirect back to the original page, if any\n    (req, res) => {\n        console.log('oauth2.js: /auth/google/callback');\n        console.log(req.session.oauth2return);\n\n        const redirect = req.session.oauth2return || '/';\n        delete req.session.oauth2return;\n        res.redirect(redirect);\n    }\n);\n// [END callback]\n\n// Deletes the user's credentials and profile from the session.\n// This does not revoke any active tokens.\nrouter.get('/auth/logout', (req, res) => {\n    req.logout();\n    res.redirect('/');\n});\n\n// Gets the authenticated session, use /auth/login --> /getauth\nrouter.get('/getauth', (req, res) => {\n    console.log(req.session);\n    res.json(req.session);\n});\n\nmodule.exports = {\n    extractProfile: extractProfile,\n    router: router,\n    required: authRequired,\n    template: addTemplateVariables\n};"],"file":"oauth2.js"}