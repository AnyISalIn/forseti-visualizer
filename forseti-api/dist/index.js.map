{"version":3,"sources":["../server/index.js"],"names":["app","server","http","createServer","use","exposedHeaders","config","corsHeaders","bodyParser","json","limit","bodyLimit","db","listen","process","env","PORT","port","console","log","address"],"mappings":";;;;;;;AAcA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA,IAAIA,GAAG,GAAG,0BAAV;AACAA,GAAG,CAACC,MAAJ,GAAaC,iBAAKC,YAAL,CAAkBH,GAAlB,CAAb,C,CAEA;;AACAA,GAAG,CAACI,GAAJ,CAAQ,wBAAO,KAAP,CAAR,E,CAEA;;AACAJ,GAAG,CAACI,GAAJ,CAAQ,sBAAK;AACZC,EAAAA,cAAc,EAAEC,mBAAOC;AADX,CAAL,CAAR;AAIAP,GAAG,CAACI,GAAJ,CAAQI,uBAAWC,IAAX,CAAgB;AACvBC,EAAAA,KAAK,EAAGJ,mBAAOK;AADQ,CAAhB,CAAR,E,CAIA;;AACA,oBAAc,UAAAC,EAAE,EAAI;AAEnB;AACAZ,EAAAA,GAAG,CAACI,GAAJ,CAAQ,4BAAW;AAAEE,IAAAA,MAAM,EAANA,kBAAF;AAAUM,IAAAA,EAAE,EAAFA;AAAV,GAAX,CAAR,EAHmB,CAKnB;;AACAZ,EAAAA,GAAG,CAACI,GAAJ,CAAQ,MAAR,EAAgB,qBAAI;AAAEE,IAAAA,MAAM,EAANA,kBAAF;AAAUM,IAAAA,EAAE,EAAFA;AAAV,GAAJ,CAAhB;AAEAZ,EAAAA,GAAG,CAACC,MAAJ,CAAWY,MAAX,CAAkBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoBV,mBAAOW,IAA7C,EAAmD,YAAM;AACxDC,IAAAA,OAAO,CAACC,GAAR,2BAA+BnB,GAAG,CAACC,MAAJ,CAAWmB,OAAX,GAAqBH,IAApD;AACA,GAFD;AAGA,CAXD;eAaejB,G","sourcesContent":["// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport http from 'http';\nimport express from 'express';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport initializeDb from './db';\nimport middleware from './middleware';\nimport api from './api';\nimport config from './config.json';\n\nlet app = express();\napp.server = http.createServer(app);\n\n// logger\napp.use(morgan('dev'));\n\n// 3rd party middleware\napp.use(cors({\n\texposedHeaders: config.corsHeaders\n}));\n\napp.use(bodyParser.json({\n\tlimit : config.bodyLimit\n}));\n\n// connect to db\ninitializeDb( db => {\n\n\t// internal middleware\n\tapp.use(middleware({ config, db }));\n\n\t// api router\n\tapp.use('/api', api({ config, db }));\n\n\tapp.server.listen(process.env.PORT || config.port, () => {\n\t\tconsole.log(`Started on port ${app.server.address().port}`);\n\t});\n});\n\nexport default app;"],"file":"index.js"}